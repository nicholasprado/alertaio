version: '3.7'

services:
  reverse-proxy:
    image: traefik:v2.0
    command: --api.insecure=true --providers.docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "8000:80"   # HTTP port
      - "8080:8080" # admin web UI
    depends_on:
      - api
      - webui
    networks:
      - net

  webui:
    build:
      context: webui
    networks:
      net:
        aliases:
          - web
    labels:
      - "traefik.backend=webui"
      - "traefik.http.routers.webui.rule=Host(`local.alerta.io`) && PathPrefix(`/web`)"
      - "traefik.http.routers.webui.middlewares=webui-stripprefix@docker"
      - "traefik.http.middlewares.webui-stripprefix.stripprefix.prefixes=/web"

  api:
    image: alerta/alerta-web  # use API in "alerta-web" image
    depends_on:
      - db
    volumes:
      - ./api/alertad.conf:/app/alertad.conf
    environment:
      - DEBUG=1  # remove this line to turn DEBUG off
      - DATABASE_URL=postgres://postgres:postgres@db:5432/monitoring
      - AUTH_REQUIRED=True
      - ADMIN_USERS=admin@alerta.io,devops@alerta.io #default password: alerta
      - ADMIN_KEY=demo-key  # assigned to first user in ADMIN_USERS list
      # - PLUGINS=reject,blackout,normalise,enhance
    networks:
      net:
        aliases:
          - api
    labels:
      - "traefik.backend=api"
      - "traefik.http.routers.api.rule=Host(`api.local.alerta.io`)"
      - "traefik.http.routers.api.middlewares=api-addprefix@docker"
      - "traefik.http.middlewares.api-addprefix.addprefix.prefix=/api"

  db:
    image: postgres
    volumes:
      - ./pg-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=monitoring
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      net:
        aliases:
          - db
    restart: always

networks:
  net: {}
